load "../perturbedWalks.m2" 

--Benchmark template for implicitization examples (over QQ)

R1 = QQ[x,y,z,u,v, MonomialOrder =>{Weights =>{1,1,1,0,0}, Weights =>{0,0,0,1,1}, Weights =>{0,0,0,1,0}, Weights =>{1,1,0,0,0}, Weights =>{1,0,0,0,0}}]


I = ideal(
  -x - 33/125*v^2 + 21/10*u^2 - 8/5*u^3 - 99/125*u*v^2 + 693/250*u^2*v^2 - 264/125*u^3*v^2 + 3/5*u + 1/5 + 8/125*v^3 + 24/125*u*v^3 + 84/125*u^2*v^3 - 64/125*u^3*v^3,
  -y + 9/125*v^2 + 8/125*v^3 - 441/125*u^2*v + 336/125*u^3*v + 24/125*u*v^3 + 189/250*u^2*v^2 + 84/125*u^2*v^3 - 72/125*u^3*v^2 - 64/125*u^3*v^3 - 42/125*v - 126/125*u*v + 27/125*u*v^2,
  -z + 27/10 + 9/20*u^2 - 3/10*u^3 - 9/20*u
)


G = gb I 

R2 = QQ[x,y,z,u,v, MonomialOrder =>{Weights =>{0,0,0,1,1}, Weights =>{1,1,1,0,0}, Weights =>{1,1,0,0,0}, Weights =>{1,0,0,0,0}, Weights =>{0,0,0,1,0}}]

I2 = sub(I, R2) 
 

--t1 = elapsedTiming G1 = gb I2

--setWalkTrace 3 
t2 = elapsedTiming G2 = groebnerWalk(G, R2) 

--t3 = elapsedTiming G3 = groebnerWalk(G, R2, Strategy => Generic )

--t4 = elapsedTiming G4 = perturbedWalk(G, R2, 16)

--t5 = elapsedTiming G5 = hperturbedWalk(G, R2, 64)

--gens G5 == gens G3
